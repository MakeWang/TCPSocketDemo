// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\loginMsgs.proto
package com.hp.tcp.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Datatype.UINT32;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * server reply chat svr info
 */
public final class PB_ROOMSVR_INFO extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_ROOMID = 0;
  public static final String DEFAULT_HOST = "";
  public static final Integer DEFAULT_PORT = 0;
  public static final Integer DEFAULT_TOKEN = 0;

  /**
   * room id
   */
  @ProtoField(tag = 1, type = INT32, label = REQUIRED)
  public final Integer roomid;

  /**
   * chat svr host or ip
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public final String host;

  /**
   * chat svr port
   */
  @ProtoField(tag = 3, type = UINT32, label = REQUIRED)
  public final Integer port;

  /**
   * enter room token
   */
  @ProtoField(tag = 4, type = UINT32, label = REQUIRED)
  public final Integer token;

  public PB_ROOMSVR_INFO(Integer roomid, String host, Integer port, Integer token) {
    this.roomid = roomid;
    this.host = host;
    this.port = port;
    this.token = token;
  }

  private PB_ROOMSVR_INFO(Builder builder) {
    this(builder.roomid, builder.host, builder.port, builder.token);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PB_ROOMSVR_INFO)) return false;
    PB_ROOMSVR_INFO o = (PB_ROOMSVR_INFO) other;
    return equals(roomid, o.roomid)
        && equals(host, o.host)
        && equals(port, o.port)
        && equals(token, o.token);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = roomid != null ? roomid.hashCode() : 0;
      result = result * 37 + (host != null ? host.hashCode() : 0);
      result = result * 37 + (port != null ? port.hashCode() : 0);
      result = result * 37 + (token != null ? token.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PB_ROOMSVR_INFO> {

    public Integer roomid;
    public String host;
    public Integer port;
    public Integer token;

    public Builder() {
    }

    public Builder(PB_ROOMSVR_INFO message) {
      super(message);
      if (message == null) return;
      this.roomid = message.roomid;
      this.host = message.host;
      this.port = message.port;
      this.token = message.token;
    }

    /**
     * room id
     */
    public Builder roomid(Integer roomid) {
      this.roomid = roomid;
      return this;
    }

    /**
     * chat svr host or ip
     */
    public Builder host(String host) {
      this.host = host;
      return this;
    }

    /**
     * chat svr port
     */
    public Builder port(Integer port) {
      this.port = port;
      return this;
    }

    /**
     * enter room token
     */
    public Builder token(Integer token) {
      this.token = token;
      return this;
    }

    @Override
    public PB_ROOMSVR_INFO build() {
      checkRequiredFields();
      return new PB_ROOMSVR_INFO(this);
    }
  }
}
