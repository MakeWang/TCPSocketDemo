// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\roomMsgs.proto
package com.hp.tcp.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * ������Ϣ�ṹ
 */
public final class PB_PUSH_NOTICE_MSG extends Message {
  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_TITLE = "";
  public static final String DEFAULT_CONTENT = "";
  public static final List<String> DEFAULT_RCVTARGET = Collections.emptyList();
  public static final String DEFAULT_PUSHCODE = "";

  /**
   * ���ͱ���
   */
  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public final String title;

  /**
   * ��������
   */
  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public final String content;

  /**
   * ���ܶ���
   */
  @ProtoField(tag = 3, type = STRING, label = REPEATED)
  public final List<String> rcvtarget;

  /**
   * ������Ϣ���
   */
  @ProtoField(tag = 4, type = STRING)
  public final String pushcode;

  public PB_PUSH_NOTICE_MSG(String title, String content, List<String> rcvtarget, String pushcode) {
    this.title = title;
    this.content = content;
    this.rcvtarget = immutableCopyOf(rcvtarget);
    this.pushcode = pushcode;
  }

  private PB_PUSH_NOTICE_MSG(Builder builder) {
    this(builder.title, builder.content, builder.rcvtarget, builder.pushcode);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PB_PUSH_NOTICE_MSG)) return false;
    PB_PUSH_NOTICE_MSG o = (PB_PUSH_NOTICE_MSG) other;
    return equals(title, o.title)
        && equals(content, o.content)
        && equals(rcvtarget, o.rcvtarget)
        && equals(pushcode, o.pushcode);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = title != null ? title.hashCode() : 0;
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (rcvtarget != null ? rcvtarget.hashCode() : 1);
      result = result * 37 + (pushcode != null ? pushcode.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PB_PUSH_NOTICE_MSG> {

    public String title;
    public String content;
    public List<String> rcvtarget;
    public String pushcode;

    public Builder() {
    }

    public Builder(PB_PUSH_NOTICE_MSG message) {
      super(message);
      if (message == null) return;
      this.title = message.title;
      this.content = message.content;
      this.rcvtarget = copyOf(message.rcvtarget);
      this.pushcode = message.pushcode;
    }

    /**
     * ���ͱ���
     */
    public Builder title(String title) {
      this.title = title;
      return this;
    }

    /**
     * ��������
     */
    public Builder content(String content) {
      this.content = content;
      return this;
    }

    /**
     * ���ܶ���
     */
    public Builder rcvtarget(List<String> rcvtarget) {
      this.rcvtarget = checkForNulls(rcvtarget);
      return this;
    }

    /**
     * ������Ϣ���
     */
    public Builder pushcode(String pushcode) {
      this.pushcode = pushcode;
      return this;
    }

    @Override
    public PB_PUSH_NOTICE_MSG build() {
      checkRequiredFields();
      return new PB_PUSH_NOTICE_MSG(this);
    }
  }
}
