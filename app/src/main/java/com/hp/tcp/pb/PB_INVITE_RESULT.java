// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\roomMsgs.proto
package com.hp.tcp.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * ����������
 */
public final class PB_INVITE_RESULT extends Message {
  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_USERID = 0L;
  public static final Long DEFAULT_INVITEID = 0L;
  public static final Integer DEFAULT_FAMILYID = 0;
  public static final eRS_Invite_Ret DEFAULT_CTRLTYPE = eRS_Invite_Ret.eRS_IR_ACCEPT;
  public static final eRS_INVITE_REP_Ret DEFAULT_RET = eRS_INVITE_REP_Ret.eRS_INVITE_SUC;

  /**
   * �û�id
   */
  @ProtoField(tag = 1, type = INT64, label = REQUIRED)
  public final Long userid;

  /**
   * ������id
   */
  @ProtoField(tag = 2, type = INT64, label = REQUIRED)
  public final Long inviteid;

  /**
   * ����id
   */
  @ProtoField(tag = 3, type = INT32, label = REQUIRED)
  public final Integer familyid;

  /**
   * ���ܻ�ܾ�
   */
  @ProtoField(tag = 4, type = ENUM, label = REQUIRED)
  public final eRS_Invite_Ret ctrltype;

  /**
   * �ɹ���ʧ��
   */
  @ProtoField(tag = 5, type = ENUM, label = REQUIRED)
  public final eRS_INVITE_REP_Ret ret;

  public PB_INVITE_RESULT(Long userid, Long inviteid, Integer familyid, eRS_Invite_Ret ctrltype, eRS_INVITE_REP_Ret ret) {
    this.userid = userid;
    this.inviteid = inviteid;
    this.familyid = familyid;
    this.ctrltype = ctrltype;
    this.ret = ret;
  }

  private PB_INVITE_RESULT(Builder builder) {
    this(builder.userid, builder.inviteid, builder.familyid, builder.ctrltype, builder.ret);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PB_INVITE_RESULT)) return false;
    PB_INVITE_RESULT o = (PB_INVITE_RESULT) other;
    return equals(userid, o.userid)
        && equals(inviteid, o.inviteid)
        && equals(familyid, o.familyid)
        && equals(ctrltype, o.ctrltype)
        && equals(ret, o.ret);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = userid != null ? userid.hashCode() : 0;
      result = result * 37 + (inviteid != null ? inviteid.hashCode() : 0);
      result = result * 37 + (familyid != null ? familyid.hashCode() : 0);
      result = result * 37 + (ctrltype != null ? ctrltype.hashCode() : 0);
      result = result * 37 + (ret != null ? ret.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PB_INVITE_RESULT> {

    public Long userid;
    public Long inviteid;
    public Integer familyid;
    public eRS_Invite_Ret ctrltype;
    public eRS_INVITE_REP_Ret ret;

    public Builder() {
    }

    public Builder(PB_INVITE_RESULT message) {
      super(message);
      if (message == null) return;
      this.userid = message.userid;
      this.inviteid = message.inviteid;
      this.familyid = message.familyid;
      this.ctrltype = message.ctrltype;
      this.ret = message.ret;
    }

    /**
     * �û�id
     */
    public Builder userid(Long userid) {
      this.userid = userid;
      return this;
    }

    /**
     * ������id
     */
    public Builder inviteid(Long inviteid) {
      this.inviteid = inviteid;
      return this;
    }

    /**
     * ����id
     */
    public Builder familyid(Integer familyid) {
      this.familyid = familyid;
      return this;
    }

    /**
     * ���ܻ�ܾ�
     */
    public Builder ctrltype(eRS_Invite_Ret ctrltype) {
      this.ctrltype = ctrltype;
      return this;
    }

    /**
     * �ɹ���ʧ��
     */
    public Builder ret(eRS_INVITE_REP_Ret ret) {
      this.ret = ret;
      return this;
    }

    @Override
    public PB_INVITE_RESULT build() {
      checkRequiredFields();
      return new PB_INVITE_RESULT(this);
    }
  }
}
