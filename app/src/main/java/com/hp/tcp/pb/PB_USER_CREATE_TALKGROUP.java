// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\roomMsgs.proto
package com.hp.tcp.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * //////////////////////////////���������
 * ����������������Ϣ
 */
public final class PB_USER_CREATE_TALKGROUP extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_ROOMID = 0;
  public static final Long DEFAULT_USERID = 0L;
  public static final String DEFAULT_TITLE = "";
  public static final List<Long> DEFAULT_INVITE_UIDS = Collections.emptyList();

  /**
   * ����ID
   */
  @ProtoField(tag = 1, type = INT32, label = REQUIRED)
  public final Integer roomid;

  /**
   * �������û�UID
   */
  @ProtoField(tag = 2, type = INT64, label = REQUIRED)
  public final Long userid;

  /**
   * ���������
   */
  @ProtoField(tag = 3, type = STRING, label = REQUIRED)
  public final String title;

  /**
   * �������������ĳ�ԱUID
   */
  @ProtoField(tag = 4, type = INT64, label = REPEATED)
  public final List<Long> invite_uids;

  public PB_USER_CREATE_TALKGROUP(Integer roomid, Long userid, String title, List<Long> invite_uids) {
    this.roomid = roomid;
    this.userid = userid;
    this.title = title;
    this.invite_uids = immutableCopyOf(invite_uids);
  }

  private PB_USER_CREATE_TALKGROUP(Builder builder) {
    this(builder.roomid, builder.userid, builder.title, builder.invite_uids);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PB_USER_CREATE_TALKGROUP)) return false;
    PB_USER_CREATE_TALKGROUP o = (PB_USER_CREATE_TALKGROUP) other;
    return equals(roomid, o.roomid)
        && equals(userid, o.userid)
        && equals(title, o.title)
        && equals(invite_uids, o.invite_uids);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = roomid != null ? roomid.hashCode() : 0;
      result = result * 37 + (userid != null ? userid.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (invite_uids != null ? invite_uids.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PB_USER_CREATE_TALKGROUP> {

    public Integer roomid;
    public Long userid;
    public String title;
    public List<Long> invite_uids;

    public Builder() {
    }

    public Builder(PB_USER_CREATE_TALKGROUP message) {
      super(message);
      if (message == null) return;
      this.roomid = message.roomid;
      this.userid = message.userid;
      this.title = message.title;
      this.invite_uids = copyOf(message.invite_uids);
    }

    /**
     * ����ID
     */
    public Builder roomid(Integer roomid) {
      this.roomid = roomid;
      return this;
    }

    /**
     * �������û�UID
     */
    public Builder userid(Long userid) {
      this.userid = userid;
      return this;
    }

    /**
     * ���������
     */
    public Builder title(String title) {
      this.title = title;
      return this;
    }

    /**
     * �������������ĳ�ԱUID
     */
    public Builder invite_uids(List<Long> invite_uids) {
      this.invite_uids = checkForNulls(invite_uids);
      return this;
    }

    @Override
    public PB_USER_CREATE_TALKGROUP build() {
      checkRequiredFields();
      return new PB_USER_CREATE_TALKGROUP(this);
    }
  }
}
