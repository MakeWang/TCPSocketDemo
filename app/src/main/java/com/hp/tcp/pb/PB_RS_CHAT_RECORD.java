// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\roomMsgs.proto
package com.hp.tcp.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * ������������ʷ������Ϣ add 2015/6/18
 */
public final class PB_RS_CHAT_RECORD extends Message {
  private static final long serialVersionUID = 0L;

  public static final ePB_CHAT_ZONE DEFAULT_CHATZONE = ePB_CHAT_ZONE.CM_ZONE_FAM_NORMAL;
  public static final Long DEFAULT_USERID = 0L;
  public static final Long DEFAULT_TARGETID = 0L;
  public static final Integer DEFAULT_MSG_CNT = 0;
  public static final List<PB_RS_MSG_INFO> DEFAULT_MSG_ITEMS = Collections.emptyList();

  /**
   * ��������
   */
  @ProtoField(tag = 1, type = ENUM, label = REQUIRED)
  public final ePB_CHAT_ZONE chatzone;

  /**
   * ��ǰ�û�
   */
  @ProtoField(tag = 2, type = INT64, label = REQUIRED)
  public final Long userid;

  /**
   * Ŀ��ID���û�ID,����ID,������ID...)
   */
  @ProtoField(tag = 3, type = INT64, label = REQUIRED)
  public final Long targetid;

  /**
   * ��Ϣ����
   */
  @ProtoField(tag = 4, type = INT32, label = REQUIRED)
  public final Integer msg_cnt;

  /**
   * ��Ϣ����
   */
  @ProtoField(tag = 5, label = REPEATED, messageType = PB_RS_MSG_INFO.class)
  public final List<PB_RS_MSG_INFO> msg_items;

  public PB_RS_CHAT_RECORD(ePB_CHAT_ZONE chatzone, Long userid, Long targetid, Integer msg_cnt, List<PB_RS_MSG_INFO> msg_items) {
    this.chatzone = chatzone;
    this.userid = userid;
    this.targetid = targetid;
    this.msg_cnt = msg_cnt;
    this.msg_items = immutableCopyOf(msg_items);
  }

  private PB_RS_CHAT_RECORD(Builder builder) {
    this(builder.chatzone, builder.userid, builder.targetid, builder.msg_cnt, builder.msg_items);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PB_RS_CHAT_RECORD)) return false;
    PB_RS_CHAT_RECORD o = (PB_RS_CHAT_RECORD) other;
    return equals(chatzone, o.chatzone)
        && equals(userid, o.userid)
        && equals(targetid, o.targetid)
        && equals(msg_cnt, o.msg_cnt)
        && equals(msg_items, o.msg_items);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = chatzone != null ? chatzone.hashCode() : 0;
      result = result * 37 + (userid != null ? userid.hashCode() : 0);
      result = result * 37 + (targetid != null ? targetid.hashCode() : 0);
      result = result * 37 + (msg_cnt != null ? msg_cnt.hashCode() : 0);
      result = result * 37 + (msg_items != null ? msg_items.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PB_RS_CHAT_RECORD> {

    public ePB_CHAT_ZONE chatzone;
    public Long userid;
    public Long targetid;
    public Integer msg_cnt;
    public List<PB_RS_MSG_INFO> msg_items;

    public Builder() {
    }

    public Builder(PB_RS_CHAT_RECORD message) {
      super(message);
      if (message == null) return;
      this.chatzone = message.chatzone;
      this.userid = message.userid;
      this.targetid = message.targetid;
      this.msg_cnt = message.msg_cnt;
      this.msg_items = copyOf(message.msg_items);
    }

    /**
     * ��������
     */
    public Builder chatzone(ePB_CHAT_ZONE chatzone) {
      this.chatzone = chatzone;
      return this;
    }

    /**
     * ��ǰ�û�
     */
    public Builder userid(Long userid) {
      this.userid = userid;
      return this;
    }

    /**
     * Ŀ��ID���û�ID,����ID,������ID...)
     */
    public Builder targetid(Long targetid) {
      this.targetid = targetid;
      return this;
    }

    /**
     * ��Ϣ����
     */
    public Builder msg_cnt(Integer msg_cnt) {
      this.msg_cnt = msg_cnt;
      return this;
    }

    /**
     * ��Ϣ����
     */
    public Builder msg_items(List<PB_RS_MSG_INFO> msg_items) {
      this.msg_items = checkForNulls(msg_items);
      return this;
    }

    @Override
    public PB_RS_CHAT_RECORD build() {
      checkRequiredFields();
      return new PB_RS_CHAT_RECORD(this);
    }
  }
}
