// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\roomMsgs.proto
package com.hp.tcp.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.ENUM;
import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class PB_SELLER_PUBLISH extends Message {
  private static final long serialVersionUID = 0L;

  public static final eRS_COMMON_ZONE DEFAULT_ZONE = eRS_COMMON_ZONE.eRS_COMMON_ZONE_AT;
  public static final Integer DEFAULT_UNREADNUM = 0;
  public static final String DEFAULT_PUBLISH_TOKEN = "";
  public static final List<String> DEFAULT_RECV_TARGETS = Collections.emptyList();

  /**
   * �̼ҷ����
   * �̼�
   */
  @ProtoField(tag = 1)
  public final PB_SELLER seller;

  /**
   * �
   */
  @ProtoField(tag = 2, label = REQUIRED)
  public final PB_ACTIVITY activity;

  /**
   * ��������
   */
  @ProtoField(tag = 3, type = ENUM)
  public final eRS_COMMON_ZONE zone;

  /**
   * δ����
   */
  @ProtoField(tag = 4, type = INT32)
  public final Integer unreadnum;

  /**
   * ������֤token
   */
  @ProtoField(tag = 5, type = STRING)
  public final String publish_token;

  /**
   * �����û�
   */
  @ProtoField(tag = 6, type = STRING, label = REPEATED)
  public final List<String> recv_targets;

  public PB_SELLER_PUBLISH(PB_SELLER seller, PB_ACTIVITY activity, eRS_COMMON_ZONE zone, Integer unreadnum, String publish_token, List<String> recv_targets) {
    this.seller = seller;
    this.activity = activity;
    this.zone = zone;
    this.unreadnum = unreadnum;
    this.publish_token = publish_token;
    this.recv_targets = immutableCopyOf(recv_targets);
  }

  private PB_SELLER_PUBLISH(Builder builder) {
    this(builder.seller, builder.activity, builder.zone, builder.unreadnum, builder.publish_token, builder.recv_targets);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PB_SELLER_PUBLISH)) return false;
    PB_SELLER_PUBLISH o = (PB_SELLER_PUBLISH) other;
    return equals(seller, o.seller)
        && equals(activity, o.activity)
        && equals(zone, o.zone)
        && equals(unreadnum, o.unreadnum)
        && equals(publish_token, o.publish_token)
        && equals(recv_targets, o.recv_targets);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = seller != null ? seller.hashCode() : 0;
      result = result * 37 + (activity != null ? activity.hashCode() : 0);
      result = result * 37 + (zone != null ? zone.hashCode() : 0);
      result = result * 37 + (unreadnum != null ? unreadnum.hashCode() : 0);
      result = result * 37 + (publish_token != null ? publish_token.hashCode() : 0);
      result = result * 37 + (recv_targets != null ? recv_targets.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PB_SELLER_PUBLISH> {

    public PB_SELLER seller;
    public PB_ACTIVITY activity;
    public eRS_COMMON_ZONE zone;
    public Integer unreadnum;
    public String publish_token;
    public List<String> recv_targets;

    public Builder() {
    }

    public Builder(PB_SELLER_PUBLISH message) {
      super(message);
      if (message == null) return;
      this.seller = message.seller;
      this.activity = message.activity;
      this.zone = message.zone;
      this.unreadnum = message.unreadnum;
      this.publish_token = message.publish_token;
      this.recv_targets = copyOf(message.recv_targets);
    }

    /**
     * �̼ҷ����
     * �̼�
     */
    public Builder seller(PB_SELLER seller) {
      this.seller = seller;
      return this;
    }

    /**
     * �
     */
    public Builder activity(PB_ACTIVITY activity) {
      this.activity = activity;
      return this;
    }

    /**
     * ��������
     */
    public Builder zone(eRS_COMMON_ZONE zone) {
      this.zone = zone;
      return this;
    }

    /**
     * δ����
     */
    public Builder unreadnum(Integer unreadnum) {
      this.unreadnum = unreadnum;
      return this;
    }

    /**
     * ������֤token
     */
    public Builder publish_token(String publish_token) {
      this.publish_token = publish_token;
      return this;
    }

    /**
     * �����û�
     */
    public Builder recv_targets(List<String> recv_targets) {
      this.recv_targets = checkForNulls(recv_targets);
      return this;
    }

    @Override
    public PB_SELLER_PUBLISH build() {
      checkRequiredFields();
      return new PB_SELLER_PUBLISH(this);
    }
  }
}
