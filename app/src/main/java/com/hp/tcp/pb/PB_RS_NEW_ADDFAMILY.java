// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\roomMsgs.proto
package com.hp.tcp.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * ���¼��������Ϣ�б� add 2015/6/18
 */
public final class PB_RS_NEW_ADDFAMILY extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_COUNT = 0;
  public static final List<PB_ADD_INFO> DEFAULT_ITEMS = Collections.emptyList();

  /**
   * ����
   */
  @ProtoField(tag = 1, type = INT32, label = REQUIRED)
  public final Integer count;

  /**
   * ��Ϣ�б�
   */
  @ProtoField(tag = 3, label = REPEATED, messageType = PB_ADD_INFO.class)
  public final List<PB_ADD_INFO> items;

  public PB_RS_NEW_ADDFAMILY(Integer count, List<PB_ADD_INFO> items) {
    this.count = count;
    this.items = immutableCopyOf(items);
  }

  private PB_RS_NEW_ADDFAMILY(Builder builder) {
    this(builder.count, builder.items);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PB_RS_NEW_ADDFAMILY)) return false;
    PB_RS_NEW_ADDFAMILY o = (PB_RS_NEW_ADDFAMILY) other;
    return equals(count, o.count)
        && equals(items, o.items);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = count != null ? count.hashCode() : 0;
      result = result * 37 + (items != null ? items.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PB_RS_NEW_ADDFAMILY> {

    public Integer count;
    public List<PB_ADD_INFO> items;

    public Builder() {
    }

    public Builder(PB_RS_NEW_ADDFAMILY message) {
      super(message);
      if (message == null) return;
      this.count = message.count;
      this.items = copyOf(message.items);
    }

    /**
     * ����
     */
    public Builder count(Integer count) {
      this.count = count;
      return this;
    }

    /**
     * ��Ϣ�б�
     */
    public Builder items(List<PB_ADD_INFO> items) {
      this.items = checkForNulls(items);
      return this;
    }

    @Override
    public PB_RS_NEW_ADDFAMILY build() {
      checkRequiredFields();
      return new PB_RS_NEW_ADDFAMILY(this);
    }
  }
}
