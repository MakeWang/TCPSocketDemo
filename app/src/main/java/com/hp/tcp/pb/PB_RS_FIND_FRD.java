// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\roomMsgs.proto
package com.hp.tcp.pb;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Label.REPEATED;
import static com.squareup.wire.Message.Label.REQUIRED;

/**
 * ���������ز��ҵ��Ĵ��Ӻ����û�
 */
public final class PB_RS_FIND_FRD extends Message {
  private static final long serialVersionUID = 0L;

  public static final Integer DEFAULT_FIND_CNT = 0;
  public static final List<PB_FRIEND_ITEM> DEFAULT_ITEMS = Collections.emptyList();

  /**
   * �ҵ��ĸ���
   */
  @ProtoField(tag = 1, type = INT32, label = REQUIRED)
  public final Integer find_cnt;

  /**
   * ���������ĺ�������
   */
  @ProtoField(tag = 2, label = REPEATED, messageType = PB_FRIEND_ITEM.class)
  public final List<PB_FRIEND_ITEM> items;

  public PB_RS_FIND_FRD(Integer find_cnt, List<PB_FRIEND_ITEM> items) {
    this.find_cnt = find_cnt;
    this.items = immutableCopyOf(items);
  }

  private PB_RS_FIND_FRD(Builder builder) {
    this(builder.find_cnt, builder.items);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PB_RS_FIND_FRD)) return false;
    PB_RS_FIND_FRD o = (PB_RS_FIND_FRD) other;
    return equals(find_cnt, o.find_cnt)
        && equals(items, o.items);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = find_cnt != null ? find_cnt.hashCode() : 0;
      result = result * 37 + (items != null ? items.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<PB_RS_FIND_FRD> {

    public Integer find_cnt;
    public List<PB_FRIEND_ITEM> items;

    public Builder() {
    }

    public Builder(PB_RS_FIND_FRD message) {
      super(message);
      if (message == null) return;
      this.find_cnt = message.find_cnt;
      this.items = copyOf(message.items);
    }

    /**
     * �ҵ��ĸ���
     */
    public Builder find_cnt(Integer find_cnt) {
      this.find_cnt = find_cnt;
      return this;
    }

    /**
     * ���������ĺ�������
     */
    public Builder items(List<PB_FRIEND_ITEM> items) {
      this.items = checkForNulls(items);
      return this;
    }

    @Override
    public PB_RS_FIND_FRD build() {
      checkRequiredFields();
      return new PB_RS_FIND_FRD(this);
    }
  }
}
